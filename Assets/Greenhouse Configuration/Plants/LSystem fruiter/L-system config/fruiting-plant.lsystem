#axiom S(0)
#iterations 70

## flags set based on the pollination state
#runtime hasAnther 1
#runtime isPollinated 0

#define primaryBranchInternodes 4
#define shootHeight 5
#define internodeHeight 6
#define leafAge 3
#define leavesPerPetiole 3
#define petioleLeafAngularDist 110

#define flowerAge 7
#define timeToFruit 10

#define flowerFailureChance 0


## S is the Shoot symbol
S(x) : x == 0 -> FS(x + 1)NT(-shootHeight)
S(x) : x < shootHeight && x > 0-> FS(x+1)
S(x) : x == shootHeight -> []

## T is the terminal bud
T(x) : x < 0 -> T(x + 1)
T(x) : x < primaryBranchInternodes && x >= 0 -> I(internodeHeight)[&(60)B(x + 1)][\(180)&(60)B(x + 1)]\(137)T(x + 1)
T(x) : x == primaryBranchInternodes -> []


#define flowerStalkLength 6

## B is a bud off the main stem, and randomly chooses what it will become
B(x) -> [^(50)V]petiole(leavesPerPetiole)

## V is a flowering bud
P(flowerFailureChance) V -> []
P(1 - flowerFailureChance) V -> V(flowerStalkLength)
V(x) : x > 0 -> $(0.1)FV(x - 1)
V(x) : x <= 0 -> [``C(x)K(1)`A(1)]

 
## C is a flower controller
C(x) : x < timeToFruit -> C(x + 1)
C(x)K(y)`A(z) : x >= timeToFruit -> D(1)
C(x)K(y)` : x >= timeToFruit -> D(1)

#define fruitSize 5
## D is a fruiting body
D(x) : x < fruitSize -> D(x + 1)

## P is the petiole, x is number of leaves
#define petiole( P(
petiole(x) : x >= 2 -> I(3)[O((x - 1) / 2, -petioleLeafAngularDist)]L[O((x - 1) / 2, petioleLeafAngularDist)]
petiole(x) : x > 0 -> L
O(x, t) : x > 0 -> +(t)L(x/(leavesPerPetiole/2) * leafAge)O(x - 1, t)

## I is an internode, used to just build length of certain size
I(x) : x > 0 -> I(x - 1)$(0.003)F

## organs

#define leafExpression [&&L][/(180)&&L]
N -> leafExpression

## l is a leaf
L -> [`l(1, leafAge)]
L(x) -> [`l(1, x)]
l(x, y) : x < y -> l(x + 1, y)

## K is a flower
K(x) : x < flowerAge -> K(x + 1)

## A is an anther
A(x) : x < flowerAge && hasAnther > 0 -> A(x + 1)
A(x) : hasAnther < 1 -> []













