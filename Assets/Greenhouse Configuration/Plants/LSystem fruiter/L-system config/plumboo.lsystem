#axiom r(0.1, 10, 1000, 10, 20)b(10)i(0)S(0)
#iterations 500

#symbols /\&^+-!F$`@
#global /\&^+-!F$`@H
#symbols R

#symbols q
#include plumboo-controllers.lsyslib (LeafController->q)

#symbols i
#include organIdentity (Identifier->i)
#symbols s
#matches s
#include sunlight (LightAmount->s)


#symbols ra
#matches r
#define diffusionStepsPerStep 10
#include diffusion (Node->r) (Amount->a)
#define defaultMaxWater 1000
#define defaultMaxGlucose 20

## flags set based on the pollination state
#runtime hasAnther 1
#runtime isPollinated 0

## composition definitions. define directives evaluate in-order, these directives rely on subsequent definitions to complete
#define petioleLeafAngularDist (270 / leavesPerPetiole)

## variables controlled by genes
#define primaryBranchInternodes 7
#define flowerFailureChance 0.25
#define stamenSize 0.6
## ranges from 1 to 5
#define leavesPerPetiole 5


#define primaryAngularSeparation 137


## variables defined for utility
#define shootHeight 5
#define internodeHeight 3
#define leafAge 3



## S is the Shoot symbol
#symbols S
#matches S
#immature S
S(x) : x == 0 -> @FS(x + 1)leafExpressionT(-shootHeight)
S(x) : x < shootHeight && x > 0-> FS(x+1)
S(x) : x == shootHeight -> r(0.1, 0, defaultMaxWater, 0, defaultMaxGlucose)

## b is the water producing root
#symbols b
b(x) -> a(x)b(x)

## T is the terminal bud
#symbols T
#matches T
#immature T
T(x) : x < 0 -> T(x + 1)
r(a, water, c, glucose, d) < T(x) : x < primaryBranchInternodes && x >= 0 && water > 1 && glucose > 1 -> a(-1, -1)I(internodeHeight)r(.1, 0, defaultMaxWater, 0, defaultMaxGlucose)[&(60)B(x + 1)][\(180)&(60)B(x + 1)]\(primaryAngularSeparation)T(x + 1)
r(a, water, c, glucose, d) < T(x) : x >= primaryBranchInternodes -> J(internodeHeight)


## B is a bud off the main stem, and randomly chooses what it will become
#symbols B
#matches B
B(x) -> [^(50)V][qi(0)s(0)petiole(leavesPerPetiole)]

#include plumboo-organs.lsyslib (FlowerBud->V) (FruitOrgan->D) (Anther->A) (Flower->K)
#symbols VDKA


## J is a signal which propigates from the apex, signaling flowering.
#symbols J
#matches J
#immature J
J(x) : x > 0 -> J(x - 1)
J(x) : x <= 0 -> J
J ->
## H is a signal which propigates upwards from internodes, signaling flowering
#symbols H
#matches H
H ->
 
## P is the petiole, x is number of leaves
#symbols P
#matches P
#define petiole( P(
petiole(x) : x >= 2 -> I(3)[O((x - 1) / 2, -petioleLeafAngularDist)]L[O((x - 1) / 2, petioleLeafAngularDist)]
petiole(x) : x > 0 -> L

## O is a symbol which fans leaves out
#symbols O
O(x, t) : x > 0 -> +(t)L(x/(leavesPerPetiole/2) * leafAge)O(x - 1, t)

## I is an internode, used to just build length of certain size
#symbols I
#matches I
I(x)                     : x > 0 -> I(x - 1)$(0.003)@F
I(x) > r(a, b, c, d, e)J         -> JI(x)H

## organs

#define leafExpression [i(0)[&&L][/(180)&&L]]
## l is a leaf
#symbols Ll
#matches Ll
L    -> l(1, leafAge)
L(x) -> [l(1, x)]
l(x, y) : x < y -> l(x + 1, y)